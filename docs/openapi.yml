openapi: '3.0.2'

info:
  title: Vending Machine Management System API
  description: APIs for managing vending machines and product stocks
  version: '1.0'

tags:
  - name: vending-machines
    description: Every APIs for vending machines
  - name: product-stocks
    description: Every APIs for the product stocks in vending machines
  - name: stock-records
    description: Every APIs for accessing the stock records

paths:

  /api/vending_machines/add:
    post:
      tags:
        - vending-machines
      summary: Add a new vending machine
      description: Add a new vending machine to the database with the provided details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendingMachine'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVendingMachineSuccess'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddVendingMachineError'

  /api/vending_machines/update/{vm_id}:
    post:
      tags:
        - vending-machines
      summary: Update a vending machine
      description: Update an existing vending machine in the database with the provided data
      parameters:
        - name: vm_id
          in: path
          description: ID of the vending machine to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendingMachine'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVendingMachineSuccess'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVendingMachineError'

  /api/vending_machines/delete/{vm_id}:
    post:
      tags:
        - vending-machines
      summary: Deletes a vending machine
      description: Deletes a vending machine machine in the database with the provided ID
      parameters:
        - name: vm_id
          in: path
          description: ID of the vending machine to delete.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVendingMachineSuccess'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVendingMachineError'

  /api/product_stocks/add/{vm_id}:
    post:
      tags:
        - product-stocks
      summary: Add product stocks to a vending machine
      description: Add product stocks to an existing vending machine in the database
      parameters:
        - name: vm_id
          in: path
          description: ID of the vending machine to add product stocks to
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductStock'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductStockSuccess'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductStockError'

  /api/product_stocks/update/{vm_id}/{prod_id}:
    post:
      tags:
        - product-stocks
      summary: Update product stock in a vending machine
      description: Update the product stock for a specific product in a vending machine
      parameters:
        - name: vm_id
          in: path
          description: ID of the vending machine that the product is in
          required: true
          schema:
            type: integer
        - name: prod_id
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductStock'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductStockSuccess'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductStockError'

  /api/product_stocks/delete/{vm_id}/{prod_id}:
    post:
      tags:
        - product-stocks
      summary: Delete a product stock from a vending machine
      description: Delete a product stock from the database for a given vending machine ID and product ID
      parameters:
        - name: vm_id
          in: path
          description: ID of the vending machine that the product is in
          required: true
          schema:
            type: integer
        - name: prod_id
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductStockSuccess'
        '400':
          description: 'Bad request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductStockError'

components:
  schemas:

    VendingMachine:
      type: object
      properties:
        name:
          type: string
          example: 'vm_001'
        location:
          type: string
          example: 'canteen'

    AddVendingMachineSuccess:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            post:
              $ref: '#/components/schemas/VendingMachine'
        message:
          type: string
          example: 'vending machine 1 is successfully added'

    AddVendingMachineError:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        data:
          type: object
          properties:
            post:
              type: object
        message:
          type: string
          example: 'unable to add new vending machine'

    UpdateVendingMachineSuccess:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            post:
              $ref: '#/components/schemas/VendingMachine'
        message:
          type: string
          example: 'vending machine 1 is successfully updated'

    UpdateVendingMachineError:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        data:
          type: object
          properties:
            post:
              type: object
        message:
          type: string
          example: 'unable to update vending machine 1'

    DeleteVendingMachineSuccess:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            post:
              type: object
              example: null
        message:
          type: string
          example: 'vending machine 1 is successfully deleted'

    DeleteVendingMachineError:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        data:
          type: object
          properties:
            post:
              type: object
              example: null
        message:
          type: string
          example: 'unable to delete vending machine 1'

    ProductStock:
      type: object
      properties:
        vm_id:
          type: integer
          example: 1
        prod_id:
          type: integer
          example: 1
        stock:
          type: integer
          example: 100

    AddProductStockSuccess:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            post:
              $ref: '#/components/schemas/ProductStock'
        message:
          type: string
          example: 'new product stock is successfully added to vending machine 1'

    AddProductStockError:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        data:
          type: object
          properties:
            post:
              type: object
        message:
          type: string
          example: 'unable to add new product stock to vending machine 1'

    UpdateProductStockSuccess:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            post:
              $ref: '#/components/schemas/ProductStock'
        message:
          type: string
          example: 'product 1 stock is successfully updated in vending machine 1'

    UpdateProductStockError:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        data:
          type: object
          properties:
            post:
              type: object
        message:
          type: string
          example: 'unable to update product 1 in vending machine 1'

    DeleteProductStockSuccess:
      type: object
      properties:
        status:
          type: string
          enum: [success]
        data:
          type: object
          properties:
            post:
              type: object
              example: null
        message:
          type: string
          example: 'product 1 is successfully deleted from vending machine 1'

    DeleteProductStockError:
      type: object
      properties:
        status:
          type: string
          enum: [error]
        data:
          type: object
          properties:
            post:
              type: object
              example: null
        message:
          type: string
          example: 'unable to delete product 1 from vending machine 1'
